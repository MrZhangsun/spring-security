<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="site.zhangsun.security.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="site.zhangsun.security.pojo.entity.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="oriented_people" property="orientedPeople" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="length_of_hour" property="lengthOfHour" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="site.zhangsun.security.pojo.entity.CourseWithBLOBs" extends="BaseResultMap" >
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="picture" property="picture" jdbcType="LONGVARCHAR" />
    <result column="signin_qrcode" property="signinQrcode" jdbcType="LONGVARCHAR" />
    <result column="signout_qrcode" property="signoutQrcode" jdbcType="LONGVARCHAR" />
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, name, teacher, status, year, start_time, end_time, oriented_people, location, 
    deleted, creator, create_time, updater, update_time, length_of_hour
  </sql>
  <sql id="Blob_Column_List" >
    introduction, picture, signin_qrcode, signout_qrcode, detail
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="site.zhangsun.security.pojo.entity.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="site.zhangsun.security.pojo.entity.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="site.zhangsun.security.pojo.entity.CourseKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="site.zhangsun.security.pojo.entity.CourseKey" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="site.zhangsun.security.pojo.entity.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="site.zhangsun.security.pojo.entity.CourseWithBLOBs" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (type, name, teacher, 
      status, year, start_time, 
      end_time, oriented_people, location, 
      deleted, creator, create_time, 
      updater, update_time, length_of_hour, 
      introduction, picture, signin_qrcode, 
      signout_qrcode, detail)
    values (#{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{orientedPeople,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=BIT}, #{creator,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{lengthOfHour,jdbcType=DECIMAL}, 
      #{introduction,jdbcType=LONGVARCHAR}, #{picture,jdbcType=LONGVARCHAR}, #{signinQrcode,jdbcType=LONGVARCHAR}, 
      #{signoutQrcode,jdbcType=LONGVARCHAR}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="site.zhangsun.security.pojo.entity.CourseWithBLOBs" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="orientedPeople != null" >
        oriented_people,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lengthOfHour != null" >
        length_of_hour,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="signinQrcode != null" >
        signin_qrcode,
      </if>
      <if test="signoutQrcode != null" >
        signout_qrcode,
      </if>
      <if test="detail != null" >
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orientedPeople != null" >
        #{orientedPeople,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lengthOfHour != null" >
        #{lengthOfHour,jdbcType=DECIMAL},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="signinQrcode != null" >
        #{signinQrcode,jdbcType=LONGVARCHAR},
      </if>
      <if test="signoutQrcode != null" >
        #{signoutQrcode,jdbcType=LONGVARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="site.zhangsun.security.pojo.entity.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orientedPeople != null" >
        oriented_people = #{record.orientedPeople,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        updater = #{record.updater,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lengthOfHour != null" >
        length_of_hour = #{record.lengthOfHour,jdbcType=DECIMAL},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.picture != null" >
        picture = #{record.picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.signinQrcode != null" >
        signin_qrcode = #{record.signinQrcode,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.signoutQrcode != null" >
        signout_qrcode = #{record.signoutQrcode,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update course
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      oriented_people = #{record.orientedPeople,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=BIT},
      creator = #{record.creator,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      length_of_hour = #{record.lengthOfHour,jdbcType=DECIMAL},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      picture = #{record.picture,jdbcType=LONGVARCHAR},
      signin_qrcode = #{record.signinQrcode,jdbcType=LONGVARCHAR},
      signout_qrcode = #{record.signoutQrcode,jdbcType=LONGVARCHAR},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      oriented_people = #{record.orientedPeople,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=BIT},
      creator = #{record.creator,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      length_of_hour = #{record.lengthOfHour,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="site.zhangsun.security.pojo.entity.CourseWithBLOBs" >
    update course
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orientedPeople != null" >
        oriented_people = #{orientedPeople,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lengthOfHour != null" >
        length_of_hour = #{lengthOfHour,jdbcType=DECIMAL},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="signinQrcode != null" >
        signin_qrcode = #{signinQrcode,jdbcType=LONGVARCHAR},
      </if>
      <if test="signoutQrcode != null" >
        signout_qrcode = #{signoutQrcode,jdbcType=LONGVARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="site.zhangsun.security.pojo.entity.CourseWithBLOBs" >
    update course
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      oriented_people = #{orientedPeople,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT},
      creator = #{creator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      length_of_hour = #{lengthOfHour,jdbcType=DECIMAL},
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      picture = #{picture,jdbcType=LONGVARCHAR},
      signin_qrcode = #{signinQrcode,jdbcType=LONGVARCHAR},
      signout_qrcode = #{signoutQrcode,jdbcType=LONGVARCHAR},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="site.zhangsun.security.pojo.entity.Course" >
    update course
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      oriented_people = #{orientedPeople,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT},
      creator = #{creator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      length_of_hour = #{lengthOfHour,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>